{"version":3,"sources":["constants/apiConstants.js","components/Header/Header.jsx","components/LoginForm/LoginForm.jsx","components/RegistrationForm/RegistrationForm.jsx","components/Home/Home.js","utils/PrivateRoutes.js","components/AlertComponent/AlertComponent.js","components/UserForm/UserForm.jsx","App.js","index.js"],"names":["ACCESS_TOKEN_NAME","withRouter","props","s","title","location","pathname","substring","length","charAt","toUpperCase","slice","className","onClick","localStorage","removeItem","history","push","renderLogout","useState","email","password","successMessage","state","setState","handleChange","e","target","id","value","prevState","redirectToHome","updateTitle","htmlFor","type","aria-describedby","placeholder","onChange","preventDefault","payload","axios","post","then","response","status","setItem","data","token","showError","code","catch","error","console","log","style","display","role","confirmPassword","SuccessMessage","sendDetailsToServer","a","options","method","headers","body","JSON","stringify","fetch","authResponse","text","useEffect","fetchTasks","json","PrivateRoute","children","rest","render","getItem","to","from","AlertComponent","modalDisplay","toggleDisplay","closeModal","hideError","errorMessage","aria-label","aria-hidden","firstName","lastName","phone","datePicked","startTime","endTime","f_name","l_name","date_picked","start_time","end_time","App","updateErrorMessage","path","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c6acd516.chunk.js","sourcesContent":["// export const API_BASE_URL = process.env.REACT_APP_SERVER_URL;\n// export const API_BASE_URL = 'http://localhost:5000';\nexport const API_BASE_URL = 'http://localhost:5000';\nexport const ACCESS_TOKEN_NAME = 'login_access_token';","import React from 'react';\nimport { withRouter } from \"react-router-dom\";\nimport { ACCESS_TOKEN_NAME } from '../../constants/apiConstants';\n\nfunction Header(props) {\n    const capitalize = (s) => {\n        if (typeof s !== 'string') return ''\n        return s.charAt(0).toUpperCase() + s.slice(1)\n    }\n    let title = capitalize(props.location.pathname.substring(1,props.location.pathname.length))\n    if(props.location.pathname === '/') {\n        title = 'Register'\n    }\n    function renderLogout() {\n        if(props.location.pathname === '/home'){\n            return(\n                <div className=\"ml-auto\">\n                    <button className=\"btn btn-danger\" onClick={() => handleLogout()}>Logout</button>\n                </div>\n            )\n        }\n    }\n    function handleLogout() {\n        localStorage.removeItem(ACCESS_TOKEN_NAME)\n        props.history.push('/login')\n    }\n    return(\n        <nav className=\"navbar navbar-dark bg-primary\">\n            <div className=\"row col-12 d-flex justify-content-center text-white\">\n                <span className=\"h3\">{props.title || title}</span>\n                {renderLogout()}\n            </div>\n        </nav>\n    )\n}\nexport default withRouter(Header);","import React, {useState} from 'react';\nimport axios from 'axios';\nimport './LoginForm.css';\nimport {API_BASE_URL, ACCESS_TOKEN_NAME} from '../../constants/apiConstants';\nimport { withRouter } from \"react-router-dom\";\n\nfunction LoginForm(props) {\n    const [state , setState] = useState({\n        email : \"\",\n        password : \"\",\n        successMessage: null\n    })\n    const handleChange = (e) => {\n        const {id , value} = e.target   \n        setState(prevState => ({\n            ...prevState,\n            [id] : value\n        }))\n    }\n\n    const handleSubmitClick = (e) => {\n        e.preventDefault();\n        const payload={\n            \"email\":state.email,\n            \"password\":state.password,\n        }\n        axios.post('/api/auth/authenticate', payload)\n            .then(function (response) {\n                if(response.status === 200){\n                    setState(prevState => ({\n                        ...prevState,\n                        'successMessage' : 'Login successful. Redirecting to home page..'\n                    }))\n                    localStorage.setItem(ACCESS_TOKEN_NAME,response.data.token);\n                    redirectToHome();\n                    props.showError(null)\n                }\n                else if(response.code === 204){\n                    props.showError(\"Username and password do not match\");\n                }\n                else{\n                    props.showError(\"Username does not exists\");\n                }\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n    }\n    const redirectToHome = () => {\n        props.updateTitle('Home')\n        props.history.push('/home');\n    }\n    const redirectToRegister = () => {\n        props.history.push('/register'); \n        props.updateTitle('Register');\n    }\n    return(\n        <div className=\"card col-12 col-lg-4 login-card mt-2 hv-center\">\n            <form>\n                <div className=\"form-group text-left\">\n                <label htmlFor=\"exampleInputEmail1\">Email address</label>\n                <input type=\"email\" \n                       className=\"form-control\" \n                       id=\"email\" \n                       aria-describedby=\"emailHelp\" \n                       placeholder=\"Enter email\" \n                       value={state.email}\n                       onChange={handleChange}\n                />\n                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n                </div>\n                <div className=\"form-group text-left\">\n                <label htmlFor=\"exampleInputPassword1\">Password</label>\n                <input type=\"password\" \n                       className=\"form-control\" \n                       id=\"password\" \n                       placeholder=\"Password\"\n                       value={state.password}\n                       onChange={handleChange} \n                />\n                </div>\n                <div className=\"form-check\">\n                </div>\n                <button \n                    type=\"submit\" \n                    className=\"btn btn-primary\"\n                    onClick={handleSubmitClick}\n                >Submit</button>\n            </form>\n            <div className=\"alert alert-success mt-2\" style={{display: state.successMessage ? 'block' : 'none' }} role=\"alert\">\n                {state.successMessage}\n            </div>\n            <div className=\"registerMessage\">\n                <span>Dont have an account? </span>\n                <span className=\"loginText\" onClick={() => redirectToRegister()}>Register</span> \n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(LoginForm);","import React, { useState } from 'react';\nimport './RegistrationForm.css';\nimport { withRouter } from \"react-router-dom\";\n\nfunction RegistrationForm(props) {\n    const [state, setState] = useState({\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\",\n        SuccessMessage: null\n    })\n\n    const handleChange = (e) => {\n        const { id, value } = e.target\n        setState(prevState => ({\n            ...prevState,\n            [id]: value\n        }))\n    }\n\n\n    const sendDetailsToServer = async () => {\n        // check that the user filled out form\n        if (state.email.length && state.password.length) {\n            props.showError(null);\n            const payload = {\n                email: state.email,\n                password: state.password\n            }\n\n            const options =  {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(payload)\n            }\n\n            const regResponse = await fetch('/api/auth/register', options);\n            const authResponse = await fetch('/api/auth/authenticate', options);\n\n            const authText = await authResponse.text();\n            redirectToHome();\n\n        } else {\n            props.showError('Please enter valid email and password')\n        }\n\n    }\n    const redirectToHome = () => {\n        props.updateTitle('Home')\n        props.history.push('/home');\n    }\n    const redirectToLogin = () => {\n        props.updateTitle('Login')\n        props.history.push('/login');\n    }\n\n    const handleSubmitClick = (e) => {\n        e.preventDefault();\n        if (state.password === state.confirmPassword) {\n            sendDetailsToServer()\n        } else {\n            props.showError('Passwords do not match');\n        }\n    }\n\n    return (\n        <div className=\"card col-12 col-lg-4 login-card mt-2 hv-center\">\n            <form>\n                <div className=\"form-group text-left\">\n                    <label htmlFor=\"exampleInputEmail\">Email Address</label>\n                    <input type=\"email\" className=\"form-control\" id=\"email\" aria-describedby=\"emailHelp\" placeholder=\"Enter email\" value={state.email} onChange={handleChange} />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">we'll never share your information with anyone else</small>\n                </div>\n\n                <div className=\"form-group text-left\">\n                    <label htmlFor=\"exampleInputPassword1\">Password</label>\n                    <input type=\"password\" className=\"form-control\" id=\"password\" placeholder=\"Password\" value={state.password} onChange={handleChange} />\n                </div>\n\n                <div className=\"form-group text-left\">\n                    <label htmlFor=\"exampleInputPassword1\">Confirm Password</label>\n                    <input type=\"password\" className=\"form-control\" id=\"confirmPassword\" placeholder=\"Confirm Password\" value={state.confirmPassword} onChange={handleChange} />\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={handleSubmitClick}> Register</button>\n            </form>\n            <div className=\"alert alert-success mt-2\" style={{ display: state.successMessage ? 'block' : 'none' }} role=\"alert\">\n                {state.successMessage}\n            </div>\n            <div className=\"mt-2\">\n                <span>Already have an account? </span>\n                <span className=\"loginText\" onClick={() => redirectToLogin()}>Login here</span>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(RegistrationForm);","import React,{ useState, useEffect  } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\n\nfunction Home(props) {\n    useEffect(() => {\n      fetchTasks();\n    }, []);\n\n    const [state, setState] = useState([]);\n\n    const fetchTasks = async () => {\n      const response = await fetch('/api/task/getTasks');\n      const data = await response.json();\n      console.log(data);\n      setState(data);\n    }\n    return(\n        <div>\n          <h1>hi</h1>\n        </div>\n    );\n    }\n\nexport default withRouter(Home);","import React from 'react';\nimport { Redirect, Route } from \"react-router-dom\";\nimport { ACCESS_TOKEN_NAME } from '../constants/apiConstants';\nfunction PrivateRoute({ children, ...rest }) {\n    return (\n      <Route\n        {...rest}\n        render={({ location }) =>\n          localStorage.getItem(ACCESS_TOKEN_NAME) ? (\n            children\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: location }\n              }}\n            />\n          )\n        }\n      />\n    );\n  }\n\nexport default PrivateRoute;","import React, { useState, useEffect } from 'react';\nimport './AlertComponent.css';\nfunction AlertComponent(props) {\n    const [modalDisplay, toggleDisplay] = useState('none');\n    const openModal = () => {\n        toggleDisplay('block');     \n    }\n    const closeModal = () => {\n        toggleDisplay('none'); \n        props.hideError(null);\n    }\n    useEffect(() => {\n        if(props.errorMessage !== null) {\n            openModal()\n        } else {\n            closeModal()\n        }\n    });\n    \n    return(\n        <div \n            className={\"alert alert-danger alert-dismissable mt-4\"} \n            role=\"alert\" \n            id=\"alertPopUp\"\n            style={{ display: modalDisplay }}\n        >\n            <div className=\"d-flex alertMessage\">\n                <span>{props.errorMessage}</span>\n                <button type=\"button\" className=\"close\" aria-label=\"Close\" onClick={() => closeModal()}>\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            \n        </div>\n    )\n} \n\nexport default AlertComponent","import React, { useState } from 'react';\nimport axios from 'axios';\nimport './UserForm.css';\nimport { withRouter } from \"react-router-dom\";\n\nfunction UserForm(props) {\n    const [state, setState] = useState({\n        firstName: '',\n        lastName: '',\n        phone: '',\n        datePicked: '',\n        startTime: '',\n        endTime: ''\n    });\n\n    const handleChange = (e) => {\n        const { id, value } = e.target\n        setState(prevState => ({\n            ...prevState,\n            [id]: value\n        }))\n    }\n\n    const handleSubmitClick = (e) => {\n        e.preventDefault();\n        if (state.phone && state.datePicked && state.startTime && state.endTime && state.firstName && state.lastName) {\n            sendDetailsToServer()\n        } else {\n            props.showError('please fill out all fields');\n        }\n    }\n\n    const sendDetailsToServer = async () => {\n        if(state.phone && state.datePicked && state.startTime && state.endTime && state.firstName && state.lastName) {\n            props.showError(null);\n            const options = {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    f_name: state.firstName,\n                    l_name: state.lastName,\n                    phone: state.phone,\n                    date_picked: state.datePicked,\n                    start_time: state.startTime,\n                    end_time: state.endTime\n                })\n            }\n\n            await fetch('/api/task/addTask', options);\n        }\n    }\n\n    return (\n        <div className=\"card col-12 col-lg-4 login-card mt-2 hv-center\">\n        <form>\n            <div className=\"form-group text-left\">\n                <label htmlFor=\"exampleInputEmail\">First Name</label>\n                <input type=\"text\" className=\"form-control\" id=\"firstName\" aria-describedby=\"firstName\" placeholder=\"Enter first name\" value={state.firstName} onChange={handleChange} />\n                <small id=\"firstNameHelp\" className=\"form-text text-muted\">we'll never share your information with anyone else</small>\n            </div>\n\n            <div className=\"form-group text-left\">\n                <label htmlFor=\"exampleInputEmail\">Last Name</label>\n                <input type=\"text\" className=\"form-control\" id=\"lastName\" aria-describedby=\"lastName\" placeholder=\"Enter last name\" value={state.lastName} onChange={handleChange} />\n                <small id=\"lastNameHelp\" className=\"form-text text-muted\">we'll never share your information with anyone else</small>\n            </div>\n\n            <div className=\"form-group text-left\">\n                <label htmlFor=\"exampleInputEmail\">phone</label>\n                <input type=\"tel\" className=\"form-control\" id=\"phone\" aria-describedby=\"phoneHelp\" placeholder=\"Enter phone\" value={state.phone} onChange={handleChange} />\n                <small id=\"phoneHelp\" className=\"form-text text-muted\">we'll never share your information with anyone else</small>\n            </div>\n\n            <div className=\"form-group text-left\">\n                <label htmlFor=\"exampleInputEmail\">date</label>\n                <input type=\"text\" className=\"form-control\" id=\"datePicked\" aria-describedby=\"dateHelp\" placeholder=\"Enter date\" value={state.datePicked} onChange={handleChange} />\n                <small id=\"dateHelp\" className=\"form-text text-muted\">we'll never share your information with anyone else</small>\n            </div>\n\n            <div className=\"form-group text-left\">\n                <label htmlFor=\"exampleInputEmail\">start time</label>\n                <input type=\"text\" className=\"form-control\" id=\"startTime\" aria-describedby=\"startTimeHelp\" placeholder=\"Enter start time\" value={state.email} onChange={handleChange} />\n                <small id=\"startTimeHelp\" className=\"form-text text-muted\">we'll never share your information with anyone else</small>\n            </div>\n\n            <div className=\"form-group text-left\">\n                <label htmlFor=\"exampleInputEmail\">end time</label>\n                <input type=\"text\" className=\"form-control\" id=\"endTime\" aria-describedby=\"endTimeHelp\" placeholder=\"Enter end time\" value={state.endTime} onChange={handleChange} />\n                <small id=\"endTimeHelp\" className=\"form-text text-muted\">we'll never share your information with anyone else</small>\n            </div>\n\n\n            <button type=\"submit\" className=\"btn btn-primary\" onClick={handleSubmitClick}> Register</button>\n        </form>\n        <div className=\"alert alert-success mt-2\" style={{ display: state.successMessage ? 'block' : 'none' }} role=\"alert\">\n            {state.successMessage}\n        </div>\n    </div>\n    );\n}\n\nexport default withRouter(UserForm);","import React, {useState} from 'react';\nimport Header from './components/Header/Header';\nimport LoginForm from './components/LoginForm/LoginForm';\nimport RegistrationForm from './components/RegistrationForm/RegistrationForm';\nimport Home from './components/Home/Home';\nimport PrivateRoute from './utils/PrivateRoutes';\nimport {BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\nimport AlertComponent from './components/AlertComponent/AlertComponent'; \nimport UserForm from './components/UserForm/UserForm';\n\nfunction App() {\n  const [title, updateTitle] = useState(null);\n  const [errorMessage, updateErrorMessage] = useState(null);\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header title={title} />\n          <div className=\"container d-flex align-items-center flex-column\">\n            <Switch>\n              <Route path=\"/\" exact={true}>\n                <RegistrationForm showError={updateErrorMessage} updateTitle={updateTitle} />\n              </Route>\n              <Route path=\"/register\">\n              <RegistrationForm showError={updateErrorMessage} updateTitle={updateTitle}/>\n              </Route>\n              <Route path=\"/login\">\n                <LoginForm showError={updateErrorMessage} updateTitle={updateTitle}/>\n              </Route>\n              <Route path=\"/form\">\n                <UserForm showError={updateErrorMessage} updateTitle={updateTitle}/>\n              </Route>\n              <PrivateRoute path=\"/home\">\n                <Home/>\n              </PrivateRoute>\n            </Switch> \n            <AlertComponent errorMessage={errorMessage} hideError={updateErrorMessage}/>\n          </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}